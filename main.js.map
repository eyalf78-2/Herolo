{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-movie-compnent/add-movie-compnent.component.css","webpack:///./src/app/add-movie-compnent/add-movie-compnent.component.html","webpack:///./src/app/add-movie-compnent/add-movie-compnent.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/movie-edit-popup/movie-edit-popup.component.css","webpack:///./src/app/movie-edit-popup/movie-edit-popup.component.html","webpack:///./src/app/movie-edit-popup/movie-edit-popup.component.ts","webpack:///./src/app/movies-list/movies-list.component.css","webpack:///./src/app/movies-list/movies-list.component.html","webpack:///./src/app/movies-list/movies-list.component.ts","webpack:///./src/app/remove-confirmation-dialog/remove-confirmation-dialog.component.css","webpack:///./src/app/remove-confirmation-dialog/remove-confirmation-dialog.component.html","webpack:///./src/app/remove-confirmation-dialog/remove-confirmation-dialog.component.ts","webpack:///./src/app/remove-non-english-char.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/model/dataservice.ts","webpack:///./src/model/errorsservice.ts","webpack:///./src/model/movie.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Add Movie</h1>\\n<form novalidate [formGroup]=\\\"addMovieDialog\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <mat-dialog-content>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"title *\\\" formControlName=\\\"title\\\" (focus)=\\\"this.changeMovieExistsToFalse()\\\">\\n      <mat-error *ngIf=\\\"this.titleCtrl.invalid\\\">{{this.getRequiredErrorMessage(this.titleCtrl)}}</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"year (4 digit) *\\\" formControlName=\\\"year\\\">\\n      <mat-error *ngIf=\\\"this.yearCtrl.invalid\\\">{{this.getRequiredErrorMessage(this.yearCtrl)}}</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"runtime *\\\" formControlName=\\\"runtime\\\">\\n      <mat-error *ngIf=\\\"this.runtimeCtrl.invalid\\\">{{this.getRequiredErrorMessage(this.runtimeCtrl)}}</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"genre *\\\" formControlName=\\\"genre\\\">\\n      <mat-error *ngIf=\\\"this.genreCtrl.invalid\\\">{{this.getRequiredErrorMessage(this.genreCtrl)}}</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"director *\\\" formControlName=\\\"director\\\">\\n      <mat-error *ngIf=\\\"this.directorCtrl.invalid\\\">{{this.getRequiredErrorMessage(this.directorCtrl)}}</mat-error>\\n    </mat-form-field>\\n  </mat-dialog-content>\\n  <button mat-button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!addMovieDialog.valid\\\" cdkFocusInitial>Save Movie</button>\\n  <button mat-button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"this.onCancel()\\\">Cancel</button>\\n</form>\\n<div *ngIf=\\\"this.movieExists\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n    <a href=\\\"#\\\" class=\\\"close\\\" (click)=\\\"this.changeMovieExistsToFalse()\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\n   Movie not added - movie with the name \\\"{{this.titleCtrl.value}}\\\" already exists\\n</div>\\n\"","import { errorService } from './../../model/errorsservice';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Movie } from '../../model/movie';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { dataService } from '../../model/dataservice';\nexport interface DialogData {\n  movieToEdit: Movie;\n}\n@Component({\n  selector: 'app-add-movie-compnent',\n  templateUrl: './add-movie-compnent.component.html',\n  styleUrls: ['./add-movie-compnent.component.css']\n})\nexport class AddMovieCompnentComponent implements OnInit {\n  addMovieDialog: FormGroup;\n  titleCtrl: FormControl;\n  yearCtrl: FormControl;\n  runtimeCtrl: FormControl;\n  genreCtrl: FormControl;\n  directorCtrl: FormControl;\n  movieExists: boolean;\n  constructor(\n    public dialogRef: MatDialogRef<AddMovieCompnentComponent>,private errorservice:errorService ,private dataservice: dataService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  getRequiredErrorMessage(ctrl:FormControl) {\n    return this.errorservice.getRequiredErrorMessage(ctrl);\n  }\n  onSubmit() {   \n    if (this.dataservice.checkIfMovieExists(<string>this.titleCtrl.value)==0) {\n        this.dataservice.addMovie(this.titleCtrl.value, this.yearCtrl.value,this.runtimeCtrl.value, this.genreCtrl.value, this.directorCtrl.value);\n        this.dialogRef.close(\"Added\");\n    }\n    else\n      this.movieExists = true;\n  }\n  \n  onCancel(): void {\n    this.dialogRef.close(\"Cancel\");\n  }\n  changeMovieExistsToFalse() {\n    if (this.movieExists == true)\n      this.movieExists = false;\n\n  }\n  ngOnInit() {\n    this.titleCtrl = new FormControl('', Validators.required);\n    this.yearCtrl = new FormControl('', [Validators.required,\n    Validators.minLength(4), Validators.maxLength(4), Validators.pattern(\"[0-9]*\")]);\n    this.runtimeCtrl = new FormControl('', [Validators.required,Validators.pattern(\"[0-9]*\")]);\n    this.genreCtrl = new FormControl('', Validators.required);;\n    this.directorCtrl = new FormControl('', Validators.required);;\n    this.buildForm();\n\n  }\n  buildForm() {\n    this.addMovieDialog = new FormGroup({\n      title: this.titleCtrl,\n      year: this.yearCtrl,\n      runtime: this.runtimeCtrl,\n      genre: this.genreCtrl,\n      director: this.directorCtrl,\n    });\n  }\n\n}\n","module.exports = \".mainContainer {\\r\\n    background-image: url('cinema.jpg');\\r\\n    background-size: cover;\\r\\n    background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    height: 800px;;\\r\\n}\\r\\nheader {\\r\\n    background-color: #2d2a33cc;\\r\\n    \\r\\n}\\r\\nheader h1 {\\r\\n    font-weight: 700;   \\r\\n    color:white;\\r\\n    padding-bottom: 10px;\\r\\n    letter-spacing: 1.5px;\\r\\n}\"","module.exports = \"<header>\\n  <div class=\\\"row text-center\\\">\\n    <h1>\\n       {{ title }}\\n    </h1>\\n  </div>\\n</header>\\n<div class=\\\"container-fluid mainContainer\\\">\\n  <div class=\\\"row text-center\\\">\\n    <div class=\\\"col-md-12 test\\\">\\n      <app-movies-list></app-movies-list>\\n    </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Movies List';\n}\n","import { dataService } from './../model/dataservice';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { MoviesListComponent } from './movies-list/movies-list.component';\nimport { MatDialogModule, MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { MovieEditPopupComponent } from './movie-edit-popup/movie-edit-popup.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RemoveNonEnglishCharPipe } from './remove-non-english-char.pipe';\nimport { RemoveConfirmationDialogComponent } from './remove-confirmation-dialog/remove-confirmation-dialog.component';\nimport { AddMovieCompnentComponent } from './add-movie-compnent/add-movie-compnent.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { errorService } from '../model/errorsservice';\n@NgModule({\n  declarations: [\n    AppComponent,\n    MoviesListComponent,\n    MovieEditPopupComponent,\n    RemoveNonEnglishCharPipe,\n    RemoveConfirmationDialogComponent,\n    AddMovieCompnentComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    HttpClientModule  \n  ],\n  entryComponents: [\n    MovieEditPopupComponent,\n    RemoveConfirmationDialogComponent,\n    AddMovieCompnentComponent\n  ],\n  providers: [dataService,errorService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".alert {\\r\\n    margin-top:20px;\\r\\n}\"","module.exports = \"<h1 mat-dialog-title class=\\\"text-center\\\">{{data.movieToEdit.title}}</h1>\\n<form [formGroup]=\\\"editMovieForm\\\">\\n  <mat-dialog-content>\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"title\\\"placeholder=\\\"title *\\\" [(ngModel)]=\\\"data.movieToEdit.title\\\" value=\\\"{{data.movieToEdit.title | titlecase | removeNonEnglishChar}}\\\" (focus)=\\\"this.changeMovieExistsToFalse()\\\">   \\n      <mat-error *ngIf=\\\"this.titleCtrl.invalid\\\">{{this.getRequiredErrorMessage(this.titleCtrl)}}</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"year\\\" placeholder=\\\"year (4 digit) *\\\" [(ngModel)]=\\\"data.movieToEdit.year\\\" value=\\\"{{data.movieToEdit.year}}\\\">\\n      <mat-error *ngIf=\\\"this.yearCtrl.invalid\\\">{{this.getRequiredErrorMessage(this.yearCtrl)}}</mat-error>\\n      <mat-hint>4 digit</mat-hint>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"runtime\\\" placeholder=\\\"runtime *\\\" [(ngModel)]=\\\"data.movieToEdit.runtime\\\" value=\\\"{{data.movieToEdit.runtime}}\\\">\\n      <mat-error *ngIf=\\\"this.runtimeCtrl.invalid\\\">{{this.getRequiredErrorMessage(this.runtimeCtrl)}}</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"genre\\\" placeholder=\\\"genre *\\\" [(ngModel)]=\\\"data.movieToEdit.genre\\\" value=\\\"{{data.movieToEdit.genre}}\\\">\\n      <mat-error *ngIf=\\\"this.genreCtrl.invalid\\\">{{this.getRequiredErrorMessage(this.genreCtrl)}}</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"director\\\" placeholder=\\\"director *\\\" [(ngModel)]=\\\"data.movieToEdit.director\\\" value=\\\"{{data.movieToEdit.director}}\\\">\\n      <mat-error *ngIf=\\\"this.directorCtrl.invalid\\\">{{this.getRequiredErrorMessage(this.directorCtrl)}}</mat-error>\\n    </mat-form-field>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions>    \\n    <button mat-button class=\\\"btn btn-success\\\" [disabled]=\\\"!editMovieForm.valid\\\"  (click)=\\\"this.onSave(data.movieToEdit)\\\" cdkFocusInitial>Save Changes</button>\\n    <button mat-button class=\\\"btn btn-danger\\\" (click)=\\\"this.onCancel()\\\">Cancel</button>\\n  </div>\\n</form>\\n<div *ngIf=\\\"this.movieExists\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n    <a href=\\\"#\\\" class=\\\"close\\\" (click)=\\\"this.changeMovieExistsToFalse()\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\n   Movie not saved - movie with the name \\\"{{this.titleCtrl.value}}\\\" already exists\\n</div>\\n\\n\"","import { errorService } from './../../model/errorsservice';\nimport { RemoveNonEnglishCharPipe } from './../remove-non-english-char.pipe';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Movie } from '../../model/movie';\nimport { dataService } from '../../model/dataservice';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nexport interface DialogData {\n  movieToEdit: Movie;\n}\n@Component({\n  selector: 'app-movie-edit-popup',\n  templateUrl: './movie-edit-popup.component.html',\n  styleUrls: ['./movie-edit-popup.component.css']\n})\nexport class MovieEditPopupComponent implements OnInit {\n  editMovieForm: FormGroup;\n  titleCtrl: FormControl;\n  yearCtrl: FormControl;\n  runtimeCtrl: FormControl;\n  genreCtrl: FormControl;\n  directorCtrl: FormControl;\n  movieExists: boolean;\n  constructor(\n    public dialogRef: MatDialogRef<MovieEditPopupComponent>,private errorservice:errorService, private dataservice: dataService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n    getRequiredErrorMessage(ctrl:FormControl):string {   \n     return this.errorservice.getRequiredErrorMessage(ctrl);\n    }\n\n  onCancel(): void {\n    this.dialogRef.close(\"Cancel\");\n  }\n  onSave(movie): void {    \n    if (this.dataservice.checkIfMovieExists(<string>this.titleCtrl.value)==1) {    \n        this.dialogRef.close();\n    }\n    else\n      this.movieExists = true;\n\n  }\n  changeMovieExistsToFalse() {\n    if (this.movieExists == true)\n      this.movieExists = false;\n  }\n  ngOnInit() {\n    this.titleCtrl = new FormControl('', Validators.required);\n    this.yearCtrl = new FormControl('', [Validators.required,\n    Validators.minLength(4), Validators.maxLength(4), Validators.pattern(\"[0-9]*\")]);\n    this.runtimeCtrl = new FormControl('', [Validators.required,Validators.pattern(\"[0-9]*\")]);\n    this.genreCtrl = new FormControl('', Validators.required);;\n    this.directorCtrl = new FormControl('', Validators.required);;\n    this.buildForm();\n  }\n  buildForm() {\n    this.editMovieForm = new FormGroup({\n      title: this.titleCtrl,\n      year: this.yearCtrl,\n      runtime: this.runtimeCtrl,\n      genre: this.genreCtrl,\n      director: this.directorCtrl,\n    });\n  }\n\n}\n","module.exports = \"table, th,td,tr {    \\r\\n    padding: 10px;\\r\\n    text-align: center;\\r\\n    border: none !important;\\r\\n}\\r\\ntable {\\r\\n    margin: 20px auto;\\r\\n    max-width:900px;\\r\\n}\\r\\n.table-striped tr:nth-child(odd)  {\\r\\n    background-color: #d0efd0;\\r\\n }\\r\\n.table-striped tr:nth-child(even)  {\\r\\n    background-color: #cdddcd;\\r\\n }\\r\\n.table-striped tr:hover {\\r\\n    background-color: #70d09f ;\\r\\n}\\r\\nth {\\r\\n    text-transform: uppercase;\\r\\n    background-color: #479494;\\r\\n    color:#333a42;    \\r\\n}\\r\\n.glyphicon {\\r\\n    font-size: 20px;\\r\\n    padding: 5px;\\r\\n}\\r\\n.glyphicon:hover {\\r\\n    cursor: pointer;\\r\\n}\\r\\n.glyphicon-pencil {\\r\\n    color:green;\\r\\n}\\r\\n.glyphicon-remove {\\r\\n    color:#e50f0f;\\r\\n}\\r\\nbutton {\\r\\n    margin-top:10px;\\r\\n    text-transform: uppercase;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<table class=\\\"table-striped table-bordered table-hover\\\">\\n  <tr>\\n    <th>Title</th>\\n    <th>year</th>\\n    <th>runtime</th>\\n    <th>genre</th>\\n    <th>director</th>\\n    <th>actions</th>\\n  </tr>\\n  <tr *ngFor=\\\"let movie of this.movies\\\">\\n    <td>{{movie.title | titlecase | removeNonEnglishChar}}</td>\\n    <td>{{movie.year}}</td>\\n    <td>{{movie.runtime}} mins</td>\\n    <td>{{movie.genre}}</td>\\n    <td>{{movie.director}}</td>\\n    <td>\\n      <span class=\\\"removeIcon glyphicon glyphicon-pencil\\\" (click)=\\\"this.openEditDialog(movie)\\\"></span>\\n      <span class=\\\"editIcon glyphicon glyphicon-remove\\\" (click)=\\\"this.openRemoveDialog(movie)\\\"></span>\\n    </td>\\n  </tr>\\n</table>\\n<button class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"this.openAddMovieDialog()\\\">Add Movie</button>\"","import { AddMovieCompnentComponent } from './../add-movie-compnent/add-movie-compnent.component';\nimport { RemoveConfirmationDialogComponent } from './../remove-confirmation-dialog/remove-confirmation-dialog.component';\nimport { RemoveNonEnglishCharPipe } from './../remove-non-english-char.pipe';\nimport { Movie } from './../../model/movie';\nimport { dataService } from './../../model/dataservice';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MovieEditPopupComponent } from '../movie-edit-popup/movie-edit-popup.component';\n\n\n@Component({\n  selector: 'app-movies-list',\n  templateUrl: './movies-list.component.html',\n  styleUrls: ['./movies-list.component.css']\n})\nexport class MoviesListComponent implements OnInit {\n  movies: Movie[];\n  currentMovie: Movie; \n  editedMovieOriginalTitle: string;\n  editedMovieOriginalYear: number;\n  editedMovieOriginalRuntime: string;\n  editedMovieOriginalGenre: string;\n  editedMovieOriginalDirector: string;\n\n  constructor(private dataservice: dataService, public dialog: MatDialog) { }\n\n  ngOnInit() {    \n    let urls:String[]=[\"http://www.omdbapi.com/?t=the+matrix&apikey=633a87db\",\"http://www.omdbapi.com/?t=back%20+to%20+the%20+future&apikey=633a87db\",\n                      \"http://www.omdbapi.com/?t=star+wars&apikey=633a87db\"];\n    for (let url of urls) {\n      this.requestMovieFromService(url);\n    }\n    this.movies=this.dataservice.getMoviesList();    \n  }\n  requestMovieFromService (url) {\n    this.dataservice.getMoviesFromServer(url).subscribe(\n      data =>{\n        let runtime:string=data['Runtime'];\n        runtime=runtime.replace(\"min\",\"\").replace(/ /g,'');        \n        this.dataservice.addMovie(data['Title'],data['Year'],runtime,data['Genre'],data['Director']);       \n      },\n      err => {\n        console.log(err);\n          }\n    );\n  }\n  openEditDialog(movie:Movie): void {   \n    this.currentMovie = movie;\n    this.editedMovieOriginalTitle = movie.title;\n    this.editedMovieOriginalYear = movie.year;\n    this.editedMovieOriginalRuntime = movie.runtime;\n    this.editedMovieOriginalGenre = movie.genre;\n    this.editedMovieOriginalDirector = movie.director;    \n    \n    const dialogRef = this.dialog.open(MovieEditPopupComponent, {\n      width: '450px', \n      height: '500px',     \n      data: {movieToEdit: movie },\n    });\n    dialogRef.afterClosed().subscribe(result => {     \n      if (result == \"Cancel\") {        \n        this.currentMovie.title = this.editedMovieOriginalTitle;\n        this.currentMovie.year = this.editedMovieOriginalYear;\n        this.currentMovie.runtime = this.editedMovieOriginalRuntime;\n        this.currentMovie.genre = this.editedMovieOriginalGenre;\n        this.currentMovie.director = this.editedMovieOriginalDirector;        \n      }\n    });\n  }\n  openRemoveDialog(movie): void {\n    const dialogRef = this.dialog.open(RemoveConfirmationDialogComponent, {\n      width: '450px',     \n      data: {movieToEdit: movie },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result instanceof Movie) {       \n        let index = this.dataservice.getMoviesList().findIndex(x => x.id == result.id);        \n        this.dataservice.getMoviesList().splice(index,1);        \n      }      \n    });\n  }\n  openAddMovieDialog(): void {        \n    const dialogRef = this.dialog.open(AddMovieCompnentComponent, {\n      width: '450px',  \n      height: '500px'      \n    });    \n   \n  }\n}\n","module.exports = \"button {\\r\\n    margin-right: 10px;\\r\\n    width:150px;\\r\\n    font-size: 20px;\\r\\n}\\r\\n.mat-dialog-actions {\\r\\n    \\r\\n    display: block;\\r\\n}\"","module.exports = \"<h1 class=\\\"text-justify\\\" mat-dialog-title>Are you sure you want to remove \\\"{{data.movieToEdit.title}}\\\" ?</h1>\\n\\n<div mat-dialog-actions class=\\\"text-center\\\"  >  \\n  <button mat-button class=\\\"btn btn-danger\\\" (click)=\\\"this.onRemove(data.movieToEdit)\\\">Remove</button>\\n  <button mat-button class=\\\"btn btn-success\\\" (click)=\\\"this.onCancel()\\\" cdkFocusInitial>Cancel</button>\\n</div>\\n\"","import { FormGroup, FormControl } from '@angular/forms';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Movie } from '../../model/movie';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { dataService } from '../../model/dataservice';\n\nexport interface DialogData {  \n  movieToEdit:Movie;  \n}\n@Component({\n  selector: 'app-remove-confirmation-dialog',\n  templateUrl: './remove-confirmation-dialog.component.html',\n  styleUrls: ['./remove-confirmation-dialog.component.css']\n})\nexport class RemoveConfirmationDialogComponent implements OnInit {\n  \n  constructor(\n    public dialogRef: MatDialogRef<RemoveConfirmationDialogComponent>,private dataservice:dataService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n    onCancel(): void {\n      this.dialogRef.close();\n    }\n    onRemove(movie): void {\n      this.dialogRef.close(movie);\n    }\n    ngOnInit() {      \n      this.buildForm();\n    }\n    buildForm()  {\n     \n    }\n  \n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeNonEnglishChar'\n})\nexport class RemoveNonEnglishCharPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    value=value.replace(/[\\W_]+/g,\" \");\n    return value;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","import { Movie } from './movie';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class dataService {\r\n    private movies: Movie[] = [];\r\n    movieId: number = 1;\r\n    constructor(private http: HttpClient) { }\r\n    getMoviesFromServer(url): Observable<any> {\r\n        return this.http.get(url);\r\n    }\r\n    getMoviesList(): Movie[] {\r\n        return this.movies;\r\n    }\r\n    addMovie(title: string, year: number, runtime: string, genre: string, director: string) {\r\n        this.movies.push(new Movie(this.movieId, title, year, runtime, genre, director));\r\n        this.movieId++;\r\n    }\r\n    checkIfMovieExists(movieTitle: string): number {\r\n        let result = this.movies.filter(movie => movie.title.toLowerCase() === movieTitle.toLowerCase());\r\n        return result.length;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n@Injectable()\r\nexport class errorService {\r\n\r\n    constructor() { }\r\n    getRequiredErrorMessage(ctrl: FormControl) {\r\n\r\n        if (ctrl.hasError('minlength') || ctrl.hasError('maxlength'))\r\n            return \"must be exactly 4 digit\";\r\n        if (ctrl.hasError('required'))\r\n            return \"required\";\r\n        if (ctrl.hasError('pattern'))\r\n            return \"can only contain numbers\";\r\n\r\n    }\r\n}\r\n","export class Movie {\r\n    constructor (\r\n        public id:number,\r\n        public title:string,\r\n        public year:number,\r\n        public runtime:string,\r\n        public genre:string,\r\n        public director:string\r\n    ) {}\r\n    \r\n}\r\n\r\n"],"sourceRoot":""}